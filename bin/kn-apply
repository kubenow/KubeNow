#!/bin/bash

# Exit immediately if a command exits with a non-zero status
set -e

# Read config file into variable as as json
kn_config=$(json2hcl -reverse <terraform.tfvars)

# Set variables from json-config
host_cloud=$(jq -r '.provider' <<<"$kn_config")
image_name=$(jq -r '.boot_image' <<<"$kn_config")

# Check for recognized cloud provider
if ! grep -qw "$host_cloud" <<<"openstack gce azure aws"; then
  echo >&2 "Error: unrecognized host cloud '$host_cloud' in config file terraform.tfvars"
  exit 1
fi

# Import image (AWS doesn't need it)
if [ "$host_cloud" = 'openstack' ] || [ "$host_cloud" = 'gce' ] || [ "$host_cloud" = 'azure' ]; then
  export KN_GCE_ACCOUNT_FILE_PATH="$PWD/service-account.json"
  export TF_VARS_FILE="$PWD/terraform.tfvars"
  export KN_IMAGE_NAME="$image_name"
  /KubeNow_root/bin/image-create-"$host_cloud".sh
fi

# Deploy
terraform init --plugin-dir=/terraform_plugins "/KubeNow_root/$host_cloud"

# shellcheck disable=SC2086
terraform apply $TERRAFORM_OPT "/KubeNow_root/$host_cloud"

# Provision
# Read the provision list from the kn_config
provision=$(echo "$kn_config" | jq -r --compact-output 'select(.provision != null) | .provision[]')
# The --compact-output creates one json-object per line from array of provision-actions
# Convert to base64 to preserve whitespace and citations in bash loop
# Execute actions (ansible or helm) with supplied variables/parameters
actions=$(echo "$provision" | jq -r --compact-output '.action[] | @base64')
for action_base64 in $actions; do
  action=$(base64 --decode <<<"$action_base64")

  type=$(echo "$action" | jq -r '.type')
  case "$type" in
  ansible-playbook)
    playbook=$(echo "$action" | jq -r '.playbook')
    extra_vars=$(echo "$action" | jq -r --compact-output 'select(.extra_vars != null) | .extra_vars[]')

    # shellcheck disable=SC2086
    ansible-playbook $ANSIBLE_OPT -e "$extra_vars" "/KubeNow_root/$playbook"
    echo "Done with ansible-playbook: $playbook"
    ;;
  helm)
    #vars=$(echo "$action")

    ;;
  esac
done
